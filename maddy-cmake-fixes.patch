From 576ec8913c132b71abe3218ff91c24e59324ee6f Mon Sep 17 00:00:00 2001
From: Konstantinos Sideris <sideris.konstantin@gmail.com>
Date: Fri, 7 Sep 2018 18:57:43 +0300
Subject: [PATCH 1/2] Modernize cmake & add install target

---
 CMakeLists.txt        | 106 +++++++++++++++++++++---------------------
 cmake/Config.cmake.in |  21 +++++++++
 cmake/maddy.pc.in     |   6 +++
 3 files changed, 81 insertions(+), 52 deletions(-)
 create mode 100644 cmake/Config.cmake.in
 create mode 100644 cmake/maddy.pc.in

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 634dfc4..cb3c571 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,70 +1,72 @@
-# This project is licensed under the MIT license. For more information see the
-# LICENSE file.
+cmake_minimum_required(VERSION 3.1)
 
-cmake_minimum_required(VERSION 2.8)
+project(maddy VERSION 1.0.3 LANGUAGES CXX)
 
-project(maddy)
+include(GNUInstallDirs)
 
-enable_testing()
+set(CMAKE_CXX_STANDARD 14)
+set(CMAKE_CXX_STANDARD_REQUIRED ON)
 
-# ------------------------------------------------------------------------------
+add_library(maddy INTERFACE)
+add_library(maddy::maddy ALIAS maddy)
 
-set(MADDY_CPP_VERSION 14)
-add_definitions(-DCPP_VERSION=${MADDY_CPP_VERSION})
+target_include_directories(
+  maddy
+  INTERFACE
+  "$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/include>"
+  "$<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>")
 
-# ------------------------------------------------------------------------------
+set(HEADER_BASE "${CMAKE_CURRENT_SOURCE_DIR}/include")
 
-set(CMAKE_BINARY_DIR ${CMAKE_CURRENT_SOURCE_DIR}/build)
-set(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR})
-set(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR})
+#
+# Install/export targets and files
+#
 
-# ------------------------------------------------------------------------------
+set(config_install_dir "${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}")
+set(include_install_dir "${CMAKE_INSTALL_INCLUDEDIR}")
+set(pkgconfig_install_dir "${CMAKE_INSTALL_LIBDIR}/pkgconfig")
+set(version_config "${CMAKE_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake")
+set(project_config "${PROJECT_NAME}Config.cmake")
+set(pkg_config "${CMAKE_BINARY_DIR}/${PROJECT_NAME}.pc")
+set(targets_export_name "${PROJECT_NAME}Targets")
+set(namespace "${PROJECT_NAME}::")
 
-set(MADDY_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/include)
-file(GLOB_RECURSE MADDY_TESTS_FILES ${CMAKE_CURRENT_SOURCE_DIR}/tests/maddy/*.cpp)
+# Generate package version file
+include(CMakePackageConfigHelpers)
+write_basic_package_version_file("${version_config}" COMPATIBILITY
+                                 SameMajorVersion)
 
-# ------------------------------------------------------------------------------
+# Configure pkg config file.
+configure_file("cmake/maddy.pc.in" "${pkg_config}" @ONLY)
 
-set(
-  CMAKE_CXX_FLAGS
-  "${CMAKE_CXX_FLAGS} -g -std=c++${MADDY_CPP_VERSION} -Wall -Wpedantic -Wextra -Wno-ignored-qualifiers -fno-rtti -fno-exceptions -fsanitize=address -fno-omit-frame-pointer"
-)
+# Install targets.
+install(TARGETS maddy EXPORT "${targets_export_name}")
 
-# ------------------------------------------------------------------------------
+# Install headers.
+install(DIRECTORY "${HEADER_BASE}/${PROJECT_NAME}" DESTINATION
+                  "${include_install_dir}")
 
-if (UNIX AND NOT APPLE)
-  execute_process(COMMAND ${CMAKE_CXX_COMPILER}
-                  -fuse-ld=gold -Wl,--version
-                  ERROR_QUIET OUTPUT_VARIABLE ld_version)
-  if ("${ld_version}" MATCHES "GNU gold")
-    message(STATUS "Found Gold linker, use faster linker")
-    set(CMAKE_EXE_LINKER_FLAGS
-        "${CMAKE_EXE_LINKER_FLAGS} -fuse-ld=gold")
-    set(CMAKE_SHARED_LINKER_FLAGS
-        "${CMAKE_SHARED_LINKER_FLAGS} -fuse-ld=gold ")
-  endif()
-endif()
+# Install project version file.
+install(FILES "${version_config}" DESTINATION "${config_install_dir}")
 
-# ------------------------------------------------------------------------------
+# Install pkg config file.
+install(FILES "${pkg_config}" DESTINATION "${pkgconfig_install_dir}")
 
-set(gtest_force_shared_crt ON CACHE BOOL "" FORCE)
-add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/libs/gtest/googlemock)
-add_subdirectory(libs)
+# Install project config file.
+install(EXPORT "${targets_export_name}"
+               NAMESPACE
+               "${namespace}"
+               DESTINATION
+               "${config_install_dir}"
+               FILE
+               ${project_config})
 
-# ------------------------------------------------------------------------------
+# Export build directory config file.
+export(
+  EXPORT ${targets_export_name} NAMESPACE "${namespace}" FILE ${project_config})
 
-include_directories(
-  ${LIBS_INCLUDE_DIRS}
-  ${MADDY_INCLUDE_DIR}
-  ${CMAKE_CURRENT_SOURCE_DIR}/tests
-)
+# Register project in CMake user registry.
+export(PACKAGE ${PROJECT_NAME})
 
-# ------------------------------------------------------------------------------
-
-add_executable(
-  MaddyTests
-    ${MADDY_TESTS_FILES}
-    ${CMAKE_CURRENT_SOURCE_DIR}/tests/main.cpp
-)
-target_link_libraries(MaddyTests gmock_main)
-add_test(MaddyTests ${CMAKE_CURRENT_SOURCE_DIR}/build/MaddyTests)
+file(GLOB_RECURSE maddy_include_SRCS "${HEADER_BASE}/*.h")
+add_custom_target(maddy_headers_for_ide SOURCES ${maddy_include_SRCS})
diff --git a/cmake/Config.cmake.in b/cmake/Config.cmake.in
new file mode 100644
index 0000000..0e2accb
--- /dev/null
+++ b/cmake/Config.cmake.in
@@ -0,0 +1,21 @@
+# Copyright 2017 M. Petra Baranski
+
+# Permission is hereby granted, free of charge, to any person obtaining a copy
+# of this software and associated documentation files (the "Software"), to deal
+# in the Software without restriction, including without limitation the rights
+# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+# copies of the Software, and to permit persons to whom the Software is
+# furnished to do so, subject to the following conditions:
+
+# The above copyright notice and this permission notice shall be included in all
+# copies or substantial portions of the Software.
+
+# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+# SOFTWARE.
+
+include("${CMAKE_CURRENT_LIST_DIR}/@targets_export_name@.cmake")
diff --git a/cmake/maddy.pc.in b/cmake/maddy.pc.in
new file mode 100644
index 0000000..ec65d5f
--- /dev/null
+++ b/cmake/maddy.pc.in
@@ -0,0 +1,6 @@
+prefix=@CMAKE_INSTALL_PREFIX@
+includedir=${prefix}/include
+
+Name: @PROJECT_NAME@
+Description: C++ Markdown to HTML header-only parser library.
+Version: @PROJECT_VERSION@

From d6b32013a580d40de57ac8b6650846abecbb071f Mon Sep 17 00:00:00 2001
From: Konstantinos Sideris <sideris.konstantin@gmail.com>
Date: Fri, 7 Sep 2018 19:12:57 +0300
Subject: [PATCH 2/2] Set build type to Release

---
 CMakeLists.txt | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index cb3c571..dcaa433 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -10,6 +10,12 @@ set(CMAKE_CXX_STANDARD_REQUIRED ON)
 add_library(maddy INTERFACE)
 add_library(maddy::maddy ALIAS maddy)
 
+if(NOT CMAKE_BUILD_TYPE)
+  set(CMAKE_BUILD_TYPE "Release" CACHE STRING "Choose Release or Debug" FORCE)
+endif()
+
+message(STATUS "Build type: " ${CMAKE_BUILD_TYPE})
+
 target_include_directories(
   maddy
   INTERFACE
